{
  "codeSol": "",
  "quizType": "ANSWERS",
  "answers": [
    {
      "answer": "A. Because timestamp could be manipulated by validators",
      "isCorrect": true
    },
    {
      "answer": "B. Because timestamp could be non deterministic",
      "isCorrect": false
    },
    {
      "answer": "C. Because timestamp can be manipulated by users",
      "isCorrect": false
    }
  ],
  "lessonId": "12",
  "codeDef": "",
  "title": "System Objects - Clock",
  "quizTitle": "Why is timestamp potentially dangerous to use to generate random results?",
  "content": "The last system object we'll look into is the `Clock` object. This allows user to obtain the current time as recorded on the Sui blockchain:\n```\nuse sui::clock;\n\npublic entry fun get_time(clock: &Clock) {\n    let timestamp_ms = clock::timestamp_ms(clock);\n}\n```\nNote that the returned timestamp is in million seconds (1 second = 1000 ms).\n\nTimestamp can used in two common ways:\n1. Get the timestamp for record keeping or emitting events\n```\nstruct TimeEvent has copy, drop {\n    timestamp_ms: u64,\n}\n    \npublic entry fun get_time(clock: &Clock) {\n    event::emit(TimeEvent { timestamp_ms: clock::timestamp_ms(clock) });\n}\n```\n2. Generate a pseudo-random number. This is technically susceptible to validator manipulation as validators can set the timestamp within a very small margin of error.\n```\nentry fun flip_coin(clock: &Clock): u64 {\n    let timestamp_ms = clock::timestamp_ms(clock);\n    // 0 is heads, 1 is tails\n    timestamp % 2\n}\n```\n"
}
