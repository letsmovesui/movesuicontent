{
  "codeSol": "",
  "quizType": "ANSWERS",
  "answers": [
    {
      "answer": "A. Coin has more functions",
      "isCorrect": false
    },
    {
      "answer": "B. Coin has built-in tracking",
      "isCorrect": false
    },
    {
      "answer": "C. Coin offers full implementation developers can use without writing much code",
      "isCorrect": true
    }
  ],
  "lessonId": "12",
  "codeDef": "",
  "title": "The SUI Coin and paying gas and Sponsored Transaction",
  "quizTitle": "What can a user do if they don't have enough Sui balance to pay for gas for their transaction?",
  "content": "We only briefly covered Coin<SUI> in the previous lessons but didn't delve much into it. Let's explore what SUI coin is in this lesson. In short, the main purpose of SUI on the Sui network is to pay \"gas\" for transactions and as a currency.\n\nThe SUI coin's `TreasuryCap` is kept inside the Sui framework for the purpose of issuing rewards to the network as part of their [tokenomics](https://docs.sui.io/concepts/tokenomics). No single user or account has access to the `TreasuryCap` and minting/burning of the Sui coins is governed by the Sui network via the \"system\" smart contracts deployed at `0x3`.\n\n# Gas\nIn the blockchain world, **gas** refers to the fee required for performing actions, like transactions or smart contracts, on the network. It's a vital concept because it ensures that resources are allocated efficiently and helps prioritize activities by attaching costs to them. Users pay gas fees to compensate for the computational resources needed to execute their operations, and miners prioritize transactions with higher gas fees for processing. This mechanism maintains the blockchain's reliability and security.\n\nGas costs for transactions in blockchain differ significantly from the way cloud infrastructure costs are handled in the web 2.0 (centralized) world. Here are the key distinctions:\n\n1. **Decentralization vs. Centralization**: Blockchain operates in a decentralized manner, with no single entity or company controlling the network. In contrast, web 2.0 services typically rely on centralized cloud infrastructure provided by companies like Amazon Web Services (AWS), Google Cloud, or Microsoft Azure.\n2. **User-Paid vs. Company-Paid**: In blockchain, users pay gas fees directly when they perform actions on the network, such as making transactions or interacting with smart contracts. These fees ensure that users bear the costs of their activities. In web 2.0, companies usually cover the expenses of their cloud infrastructure, and users access services without direct cost for most operations.\n3. **Incentives**: Gas fees in blockchain serve as incentives for miners (or validators) to process transactions and maintain the network's security and integrity. In web 2.0, cloud infrastructure costs are typically covered by companies as part of their operational expenses, and there's no direct financial incentive for users or third parties to participate in infrastructure maintenance.\n4. **Transparency and Control**: Blockchain gas fees are transparent and can be controlled by users based on the urgency of their transactions. Users can adjust gas prices to prioritize faster confirmation times or lower costs. In web 2.0, cloud infrastructure costs are often hidden from end-users, and they have limited control over the underlying infrastructure.\n5. **Resource Allocation**: Gas fees in blockchain allocate computational resources fairly and efficiently by ensuring that users who consume more resources pay higher fees. In web 2.0, resource allocation is typically managed by centralized cloud providers, and users don't have direct visibility into or control over resource allocation decisions.\n\nIn summary, gas in blockchain represents a user-centric, cost-bearing mechanism that maintains the decentralized and transparent nature of blockchain networks. In contrast, web 2.0 relies on centralized cloud infrastructure, where companies absorb the costs, and users have less control and transparency over the underlying infrastructure.\n\n# Other uses for SUI token\nBeside gas, a network token (main token of a network) such as SUI on the Sui blockchain can also act as a form of currency as it's likely the currency with the most liquidity (amount of funds) available. This means it can be:\n1. An intermediate value to exchange between other application-specific coins or tokens.\n2. A value for users to hold their funds\n3. Participate in securing the Sui network by staking (locking) Sui and running a validator node\n\nThe total supply of SUI is capped at 10,000,000,000 (ten billion tokens). A share of SUI total supply became liquid at Mainnet launch, with the remaining tokens vesting over the coming years, or distributed as future stake reward subsidies.\n\n# Paying for gas\nWhen sending transactions on the Sui network, users have to specify the Coin object where gas would be paid from. We talked about how users can have multiple Coin objects and can use `coin::split` and `coin::join` in combination with `transfer::public_transfer` to manage them. In the context of gas, users can also use `pay::split` which combines `coin::split` and `transfer::public_transfer` for users' convenience:\n\n```\n/// Split coin `self` to two coins, one with balance `split_amount`,\n/// and the remaining balance is left is `self`.\npublic entry fun split<T>(\n    self: &mut Coin<T>, split_amount: u64, ctx: &mut TxContext\n) {\n    keep(coin::split(self, split_amount, ctx), ctx)\n}\n```\nUIs can just use a combination of these when constructing the transactions on behalf of the users to effectively manage their SUI balances to pay for gas:\n1. If users have their SUI funds split between multiple Coin objects and no single one has enough to pay for gas, they can combine them.\n2. If users want to explicitly designate a Coin object as their gas fund, they can split it from where most of their funds are held.\n\n# Sponsored transactions\n\nA Sui sponsored transaction is one where a Sui address (the sponsor's) pays the gas fees for a transaction that another address (the user's) initializes. You can use sponsored transactions to cover the fees for users on your site or app so that they don't get charged for them. This removes a significant obstacle that web 2.0 users encounter when entering web3, as they often have to purchase tokens to perform a transaction on chain. For example, you could sponsor gamers' early transactions to increase conversion rates.\n\nMore details can found [here](https://docs.sui.io/concepts/transactions/sponsored-transactions)."
}
